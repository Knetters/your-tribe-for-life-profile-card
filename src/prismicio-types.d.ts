// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PageDocumentDataSlicesSlice = TaskbarLabelsSlice;

/**
 * Content for page documents
 */
interface PageDocumentData {
  /**
   * Slice Zone field in *page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<PageDocumentDataSlicesSlice>;
}

/**
 * page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

export type AllDocumentTypes = PageDocument;

/**
 * Primary content in *TaskbarLabels → Primary*
 */
export interface TaskbarLabelsSliceDefaultPrimary {
  /**
   * labels field in *TaskbarLabels → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: taskbar_labels.primary.labels
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  labels: prismic.RichTextField;
}

/**
 * Default variation for TaskbarLabels Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TaskbarLabelsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TaskbarLabelsSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *TaskbarLabels*
 */
type TaskbarLabelsSliceVariation = TaskbarLabelsSliceDefault;

/**
 * TaskbarLabels Shared Slice
 *
 * - **API ID**: `taskbar_labels`
 * - **Description**: TaskbarLabels
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TaskbarLabelsSlice = prismic.SharedSlice<
  "taskbar_labels",
  TaskbarLabelsSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      PageDocument,
      PageDocumentData,
      PageDocumentDataSlicesSlice,
      AllDocumentTypes,
      TaskbarLabelsSlice,
      TaskbarLabelsSliceDefaultPrimary,
      TaskbarLabelsSliceVariation,
      TaskbarLabelsSliceDefault,
    };
  }
}
